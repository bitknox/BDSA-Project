@page "/stores"

@using QueueSafe.Shared
@using QueueSafe.Frontend.Extensions
@inject IJSRuntime JsRuntime;
@inject IStoreRemote StoreRepo

<div class="content-container">
    <div class="row">
        <div class="col-sm-6 mb-3">
            <h1>Select a store</h1>
        </div>
        <div class="col-sm-6 mb-3 margin-top">
            <input @bind="searchInput" @bind:event="oninput" @onkeyup="Search" class="form-control mr-sm-2" type="search"
                placeholder="Search" aria-label="Search">
        </div>
    </div>

    @if (stores != null)
    {
        <div class="row">
            @foreach (StoreListDTO store in searchedStores)
            {
                <div class="col-sm-6 mb-3">
                    <Store Id=@store.Id Name=@store.Name Address=@store.Address Image=@store.Image />
                </div>
            }
        </div>
    }
</div>

@code
{
    private StoreListDTO[] stores;
    private List<StoreListDTO> searchedStores;
    private string searchInput { get; set; }
    private int currentCount = 0;

    protected override async Task OnInitializedAsync()
    {
        stores = await StoreRepo.GetAllStores();
        searchedStores = new List<StoreListDTO>(stores);
    }

    private void Search()
    {
        if (searchInput.Trim() == "") searchedStores = new List<StoreListDTO>(stores);
        else searchedStores = stores.Where(store => store.ToString().ToLower().ContainsAll(searchInput.ToLower())).ToList();
    }
}

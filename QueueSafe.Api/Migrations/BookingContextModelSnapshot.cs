// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueueSafe.Entities;

namespace QueueSafe.Api.Migrations
{
    [DbContext(typeof(BookingContext))]
    partial class BookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("QueueSafe.Entities.Booking", b =>
                {
                    b.Property<string>("Token")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Token");

                    b.HasIndex("StoreId");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            Token = "hbkHBAKBKHSDS/",
                            StoreId = 1,
                            TimeStamp = new DateTime(2020, 11, 18, 11, 39, 37, 129, DateTimeKind.Local).AddTicks(8882)
                        },
                        new
                        {
                            Token = "hbkHBasdAKBKHSDS/",
                            StoreId = 1,
                            TimeStamp = new DateTime(2020, 11, 18, 11, 39, 37, 133, DateTimeKind.Local).AddTicks(7047)
                        });
                });

            modelBuilder.Entity("QueueSafe.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 50,
                            Name = "ElGigadik"
                        });
                });

            modelBuilder.Entity("QueueSafe.Entities.Booking", b =>
                {
                    b.HasOne("QueueSafe.Entities.Store", "Store")
                        .WithMany("Bookings")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("QueueSafe.Entities.Store", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
